// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using UserAPI.Data.DbContexts;

#nullable disable

namespace UserAPI.Data.Migrations
{
    [DbContext(typeof(UserDbContext))]
    [Migration("20231211093738_InitialMigration")]
    partial class InitialMigration
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("UserAPI.Data.Entities.User", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UserId"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("UserId");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            UserId = 1,
                            Email = "mehrad@radman.com",
                            Password = "123",
                            UserName = "mehradman"
                        },
                        new
                        {
                            UserId = 2,
                            Email = "reza@radman.com",
                            Password = "123",
                            UserName = "rezaman"
                        },
                        new
                        {
                            UserId = 3,
                            Email = "arman@radman.com",
                            Password = "123",
                            UserName = "radarman"
                        });
                });

            modelBuilder.Entity("UserAPI.Data.Entities.UserInfo", b =>
                {
                    b.Property<int>("UserInfoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UserInfoId"));

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("JobTitle")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Phone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PlaceOfBirth")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("UserInfoId");

                    b.HasIndex("UserId")
                        .IsUnique();

                    b.ToTable("UserInfos");

                    b.HasData(
                        new
                        {
                            UserInfoId = 1,
                            FullName = "Mehrad Radman",
                            JobTitle = "Software",
                            Phone = "09381231234",
                            PlaceOfBirth = "Ahvaz",
                            UserId = 1
                        },
                        new
                        {
                            UserInfoId = 2,
                            FullName = "Reza Radman",
                            JobTitle = "Agriculture",
                            Phone = "09161231234",
                            PlaceOfBirth = "Dezful",
                            UserId = 2
                        },
                        new
                        {
                            UserInfoId = 3,
                            FullName = "Arman Radman",
                            JobTitle = "Manager",
                            Phone = "09351231234",
                            PlaceOfBirth = "Abadan",
                            UserId = 3
                        });
                });

            modelBuilder.Entity("UserAPI.Data.Entities.UserInfo", b =>
                {
                    b.HasOne("UserAPI.Data.Entities.User", "User")
                        .WithOne("UserInfo")
                        .HasForeignKey("UserAPI.Data.Entities.UserInfo", "UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("UserAPI.Data.Entities.User", b =>
                {
                    b.Navigation("UserInfo")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
